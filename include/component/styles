 "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  "margin",
  "marginVertical",
  "marginHorizontal",
  "marginTop",
  "marginBottom",
  "marginLeft",
  "marginRight",
  "padding",
  "paddingVertical",
  "paddingHorizontal",
  "paddingTop",
  "paddingBottom",
  "paddingLeft",
  "paddingRight",
  "borderWidth",
  "borderTopWidth",
  "borderRightWidth",
  "borderBottomWidth",
  "borderLeftWidth",
  "position",
  "flexDirection",
  "flexWrap",
  "justifyContent",
  "alignItems",
  "alignSelf",
  "flex",
  "shadowColor",
  "shadowOffset",
  "shadowOpacity",
  "shadowRadius",
  "transform",
  "transformMatrix",
  "scaleX",
  "scaleY",
  "rotation",
  "translateX",
  "translateY",
  "resizeMode",
  "backfaceVisibility",
  "backgroundColor",
  "borderColor",
  "borderRadius",
  "overflow",
  "tintColor",
  "opacity",
  "overlayColor"









var HotList = React.createClass({
    getInitialState: function () {
        return {
            dataSource: new ListView.DataSource({rowHasChanged: (r1, r2) => r1 !== r2}),
            loaded: false,
            page: 1
        };
    },

    componentDidMount: function () {

        var url = 'http://wx.wefi.com.cn/wxbVideos/?r=TVPlaylist/GetSokuList&data={cp:1,limitdate:7}';
        console.log(url);
        fetch(url)
            .then((response) => response.json())
            .then((responseData) => {
                console.log(responseData);
                this.setState({
                    dataSource: this.state.dataSource.cloneWithRows(responseData.data),
                    loaded: true,
                    page: this.state.page++
                })

            });
    },

    render: function () {
        if (this.state.loaded) {
            return this.renderList();
        } else {
            return <Loading size={20} text={"数据加载中"}/>
        }
    },

    renderList: function () {
        return (
            <ScrollView>
                <ListView ref='list'
                          dataSource={this.state.dataSource}
                          renderRow={(rowData) => this.renderItem(rowData)}
                          initialListSize={height/3}
                          contentContainerStyle={styles.listContainer}
                    />
            </ScrollView>
        );
    },

    renderItem: function (row) {

        return (

            <TouchableOpacity style={[styles.HotContainer]}>
                <View style={[styles.HotItem,styles.HotWidth]}>
                    <Image style={[styles.HotWidth,styles.hotimg]} source={{uri:row.pic}}>
                        <Image style={[styles.HotWidth]} /*source={require('../images/half.png')}*/>
                            <View style={[styles.Hotopact,styles.HotWidth]}>
                                <View style={[styles.Hotbox]}>
                                    <Image style={[styles.HAuthorImg,styles.marginVertical]} source={{uri:row.pic}}/>
                                    <View style={[styles.fColumn]}>
                                        <View style={[styles.borderBottom]}>
                                            <Text style={[styles.Hauthor]}>{row.user}</Text>
                                        </View>
                                        <View style={[styles.fRow]}>
                                            <Text style={[styles.Htitle]}>Updated</Text>
                                            <View style={[styles.borderBottom]}>
                                                <Text style={[styles.Htitle]}>{row.time}</Text>
                                            </View>
                                            <Text style={[styles.Htitle]}>,</Text>
                                            <View style={[styles.borderBottom]}>
                                                <Text style={[styles.Htitle]}>{row.duration}s</Text>
                                            </View>
                                            <Text style={[styles.Htitle]}>,</Text>
                                            <View style={[styles.borderBottom]}>
                                                <Text style={[styles.Htitle]}>{row.click_count}</Text>
                                            </View>
                                        </View>
                                    </View>
                                </View>
                            </View>
                        </Image>
                    </Image>
                </View>
            </TouchableOpacity>



        )
    },

    renderLoading: function () {
        return (
            <View>
                <Text style={styles.loading}>loading</Text>
            </View>
        )
    }
});